version: "3"
services:
  db_recipes-init:
    image: postgres:15-alpine
    volumes:
      - ./postgresql:/data
    entrypoint:
      - sh
      - -c
      - |
        chown -R 1000:1000 /data

  db_recipes:
    depends_on:
      db_recipes-init:
        condition: service_completed_successfully
    restart: always
    image: postgres:15-alpine
    user: "1000:1000"
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - no-internet


  web_recipes:
    restart: always
    image: vabene1111/recipes
    env_file:
      - ./.env
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/opt/recipes/nginx/conf.d/errorpages
      - ./mediafiles:/opt/recipes/mediafiles
    # depends_on:
    #   - db_recipes
    networks:
      - no-internet
      - internet

  nginx_recipes:
    image: nginx:mainline-alpine
    restart: always
    env_file:
      - ./.env
    volumes:
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/etc/nginx/conf.d/errorpages:ro
      - ./Recipes.conf:/etc/nginx/conf.d/Recipes.conf
      - staticfiles:/static:ro
      - ./mediafiles:/media:ro
    labels: # traefik example labels
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_backbone"
      - "traefik.http.routers.recipes.entrypoints=websecure"
      - "traefik.http.routers.recipes.rule=Host(`recipes.home.aquiver.de`)"
      - "traefik.http.routers.recipes.tls=true"
      - "traefik.http.routers.recipes.tls.certresolver=wildcard-godaddy"
      - "traefik.http.routers.recipes.service=recipes-service@docker"
      - "traefik.http.services.recipes-service.loadbalancer.server.port=80"
    depends_on:
      - web_recipes
    networks:
      - no-internet
      - traefik_backbone

networks:
  no-internet:
    driver: bridge
    internal: true
  internet:
    driver: bridge
  traefik_backbone:
    name: traefik_backbone
    external: true


volumes:
  nginx_config:
  staticfiles:
